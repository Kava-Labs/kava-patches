From 8fdec4b5a66ea61a6775c3cc99865570d3cbd59b Mon Sep 17 00:00:00 2001
From: Robert Pirtle <astropirtle@gmail.com>
Date: Fri, 24 May 2024 10:30:07 -0700
Subject: [PATCH] feat: expose nodeDB's DeleteVersionsFrom method

---
 mutable_tree.go      | 10 ++++++++++
 mutable_tree_test.go | 29 ++++++++++++++++++++++++++++-
 2 files changed, 38 insertions(+), 1 deletion(-)

diff --git a/mutable_tree.go b/mutable_tree.go
index 2c856f0..9cfadc7 100644
--- a/mutable_tree.go
+++ b/mutable_tree.go
@@ -879,6 +879,16 @@ func (tree *MutableTree) DeleteVersionsTo(toVersion int64) error {
 	return tree.ndb.Commit()
 }
 
+// DeleteVersionsFrom removes from the given version upwards from the MutableTree.
+// It will not block the SaveVersion() call, instead it will be queued and executed deferred.
+func (tree *MutableTree) DeleteVersionsFrom(fromVersion int64) error {
+	if err := tree.ndb.DeleteVersionsFrom(fromVersion); err != nil {
+		return err
+	}
+
+	return tree.ndb.Commit()
+}
+
 // Rotate right and return the new node and orphan.
 func (tree *MutableTree) rotateRight(node *Node) (*Node, error) {
 	var err error
diff --git a/mutable_tree_test.go b/mutable_tree_test.go
index 26628c6..1e34932 100644
--- a/mutable_tree_test.go
+++ b/mutable_tree_test.go
@@ -112,7 +112,7 @@ func TestNewIteratorConcurrency(t *testing.T) {
 	}
 }
 
-func TestDelete(t *testing.T) {
+func TestDeleteVersionsTo(t *testing.T) {
 	tree := setupMutableTree(false)
 
 	_, err := tree.set([]byte("k1"), []byte("Fred"))
@@ -133,6 +133,33 @@ func TestDelete(t *testing.T) {
 	require.Equal(t, 0, bytes.Compare([]byte("Fred"), proof.GetExist().Value))
 }
 
+func TestDeleteVersionsFrom(t *testing.T) {
+	tree := setupMutableTree(false)
+
+	_, err := tree.set([]byte("k1"), []byte("Wilma"))
+	require.NoError(t, err)
+	_, version, err := tree.SaveVersion()
+	require.NoError(t, err)
+	_, _, err = tree.SaveVersion()
+	require.NoError(t, err)
+	_, _, err = tree.SaveVersion()
+	require.NoError(t, err)
+
+	require.NoError(t, tree.DeleteVersionsFrom(version+1))
+
+	proof, err := tree.GetVersionedProof([]byte("k1"), version)
+	require.Nil(t, err)
+	require.Equal(t, 0, bytes.Compare([]byte("Wilma"), proof.GetExist().Value))
+
+	proof, err = tree.GetVersionedProof([]byte("k1"), version+1)
+	require.EqualError(t, err, ErrVersionDoesNotExist.Error())
+	require.Nil(t, proof)
+
+	proof, err = tree.GetVersionedProof([]byte("k1"), version+2)
+	require.EqualError(t, err, ErrVersionDoesNotExist.Error())
+	require.Nil(t, proof)
+}
+
 func TestGetRemove(t *testing.T) {
 	require := require.New(t)
 	tree := setupMutableTree(false)
-- 
2.39.3 (Apple Git-146)

